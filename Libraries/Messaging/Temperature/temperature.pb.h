/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4 at Thu Jan 28 19:29:23 2016. */

#ifndef PB_TEMPERATURE_PB_H_INCLUDED
#define PB_TEMPERATURE_PB_H_INCLUDED
#include <pb.h>

#include "header.pb.h"

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Temperature {
    bool has_header;
    Header header;
    bool has_temperatureF;
    float temperatureF;
} Temperature;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Temperature_init_default                 {false, Header_init_default, false, 0}
#define Temperature_init_zero                    {false, Header_init_zero, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Temperature_header_tag                   1
#define Temperature_temperatureF_tag             2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Temperature_fields[3];

/* Maximum encoded size of messages (where known) */
#define Temperature_size                         (11 + Header_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TEMPERATURE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
